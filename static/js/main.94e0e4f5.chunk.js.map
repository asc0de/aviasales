{"version":3,"sources":["components/App/SearchArea/TicketsList/Ticket/FlightRow/styles.module.css","components/App/SearchArea/TicketsList/Ticket/FlightInfo/styles.module.css","components/App/SearchArea/TicketsList/Ticket/styles.module.css","components/App/SearchArea/SearchSettingsCard/HopFilters/HopFilter/styles.module.css","components/Shared/Spinner/styles.module.css","components/App/SearchArea/styles.module.css","components/Shared/Card/styles.module.css","components/Shared/Checkbox/styles.module.css","components/App/SearchArea/TicketsList/styles.module.css","components/App/styles.module.css","components/App/SearchArea/SearchSettingsCard/styles.module.css","components/App/SearchArea/SearchSettingsCard/SectionHeader/styles.module.css","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/styles.module.css","components/Shared/Radio/styles.module.css","components/Shared/Button/styles.module.css","components/App/SearchArea/TicketsList/Ticket/FlightRow/airplane.svg","components/App/SearchArea/LogoContainer/styles.module.css","components/App/SearchArea/LogoContainer/Logo/Assets/Logo.svg","serviceWorker.ts","enums/actions/ticket.ts","enums/common/HttpRequestMethod.ts","enums/common/FetchStatus.ts","enums/common/SortDirection.ts","enums/common/Currency.ts","reducers/ticket/reducer.ts","enums/actions/currency.ts","helpers/is-loading.ts","helpers/is-complete.ts","helpers/is-error.ts","helpers/pluralize-stops.ts","components/App/SearchArea/SearchSettingsCard/HopFilters/config.ts","reducers/ticket/selectors.ts","helpers/sort.ts","reducers/currency/reducer.ts","components/Shared/Spinner/config.ts","reducers/currency/selectors.ts","reducers/index.ts","components/Shared/FlexWrapper/index.tsx","components/Shared/Card/index.tsx","actions/ticket/index.ts","components/Shared/Checkbox/index.tsx","components/App/SearchArea/SearchSettingsCard/HopFilters/HopFilter/index.tsx","components/App/SearchArea/SearchSettingsCard/HopFilters/index.tsx","components/App/SearchArea/SearchSettingsCard/SectionHeader/index.tsx","actions/currency/index.ts","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/config.ts","components/Shared/Radio/index.tsx","services/request.ts","config.ts","mappers/ticket.ts","mappers/currency.ts","services/currency.ts","components/Shared/Spinner/index.tsx","components/App/SearchArea/TicketsList/Ticket/FlightInfo/config.ts","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/index.tsx","helpers/is-initial.ts","components/App/SearchArea/SearchSettingsCard/index.tsx","services/ticket.ts","components/Shared/AirlineLogo/index.tsx","components/Shared/Button/index.tsx","components/App/SearchArea/TicketsList/Ticket/FlightRow/index.tsx","components/App/SearchArea/TicketsList/Ticket/FlightInfo/index.tsx","components/App/SearchArea/TicketsList/Ticket/FlightInfo/helpers/get-ticket-format-date.ts","components/App/SearchArea/TicketsList/Ticket/index.tsx","helpers/display-currency.ts","components/App/SearchArea/TicketsList/index.tsx","components/App/SearchArea/LogoContainer/Logo/index.tsx","components/App/SearchArea/LogoContainer/index.tsx","components/App/SearchArea/index.tsx","index.tsx","components/App/index.tsx"],"names":["module","exports","flight-row-container","flight-row","flight-row-line","airplane","stops-title","time","city","date","flight-info","ticket","selling-area","info-area","logo","hop-filter","only-action","text-container","spinner","spin","m-size","s-size","search-area","search-area-content","card","checkbox-container","checkmark","tickets-list","loader-container","app","search-settings","section-header","currency-radio-container","radio-container","action-button","__webpack_require__","p","logo-container","Boolean","window","location","hostname","match","TicketAction","HttpRequestMethod","FetchStatus","SortDirection","Currency","CurrencyAction","initialState","tickets","fetchStatus","Initial","filters","currency","RUB","isLoading","Loading","isComplete","Complete","isError","Error","pluralizeStops","hops","concat","ALL_HOP_FILTER_ITEM","field","value","HOP_FILTERS_ITEMS","label","filter","getSortedAndFilteredTickets","state","sortField","direction","arguments","length","undefined","Asc","_state$ticket","items","sort","a","b","Desc","reduce","acc","_ref","push","getTicketsFetchStatus","getTicketFilters","getTicketsCurrency","SpinnerSize","initialValues","currencies","_currencies","Object","defineProperty","USD","EUR","getCurrencyFetchStatus","getCurrencyRate","getCurrenciesMap","reducers","combineReducers","action","type","SetTickets","objectSpread","toConsumableArray","payload","SetTicketsFetchStatus","AddTicketsFilters","SetTicketsFilters","SetTicketsCurrency","RemoveTicketFilters","_action$payload$reduc","fields","values","_ref2","includes","SetCurrenciesMap","SetCurrencyFetchStatus","FlexWrapper","_ref$flexDirection","flexDirection","_ref$alignItems","alignItems","_ref$justifyContent","justifyContent","className","children","react_default","createElement","style","display","Card","styles","setTickets","setTicketsFetchStatus","setTicketsFilters","addTicketsFilters","removeTicketFilters","setTicketsCurrency","Checkbox","onClick","checked","onChange","HopFilter","onAdd","onRemove","onFilterClick","e","force","preventDefault","stopPropagation","isAllFiltersValue","Checkbox_Checkbox","FlexWrapper_FlexWrapper","HopFilters","connect","dispatch","bindActionCreators","removeTicketFilter","isIncludesFilter","searchField","searchValue","find","_ref3","onAddFilter","map","_ref4","onRemoveFilter","_ref5","HopFilter_HopFilter","key","SectionHeader","setCurrenciesMap","setCurrencyFetchStatus","CURRENCY_ITEMS","Radio","onRadioChange","target","itemValue","id","name","htmlFor","request","url","method","Get","body","Promise","resolve","reject","xmlRequest","XMLHttpRequest","open","send","onload","response","JSON","parse","onerror","CommonConfig","CURRENCIES_API_KEY","BASE_CURRENCY","mapTicket","ticketDto","origin","originName","origin_name","destination","destinationName","destination_name","departureDate","Date","departure_date","departureTime","departure_time","arrivalDate","arrival_date","arrivalTime","arrival_time","carrier","stops","price","mapCurrencies","currenciesMap","CurrencyService","classCallCheck","this","createClass","_get","asyncToGenerator","regenerator_default","mark","_callee","baseCurrency","rates","_args","wrap","_context","prev","next","sent","abrupt","stop","apply","FlightInfoAlign","Spinner","_ref$size","size","L","classes","CurrencyRadio","ticketsCurrency","currenciesFetchStatus","useEffect","get","then","Spinner_Spinner","S","Radio_Radio","SearchSettingsCard","Card_Card","SectionHeader_SectionHeader","TicketService","process","AirlineLogo","iata","_ref$height","height","_ref$width","width","src","alt","Button","FlightRow","airplaneIcon","FlightInfo","align","cityName","Left","Right","toLocaleDateString","day","month","year","weekday","split","part","trim","reverse","join","getTicketFormatDate","Ticket","rate","actualPrice","AirlineLogo_AirlineLogo","Button_Button","toLocaleString","maximumFractionDigits","minimumFractionDigits","displayCurrency","FlightInfo_FlightInfo","FlightRow_FlightRow","TicketsList","ticketsFetchStatus","M","index","Ticket_Ticket","buildTicketList","Logo","LogoSvg","LogoContainer","Logo_Logo","SearchArea","LogoContainer_LogoContainer","SearchSettingsCard_SearchSettingsCard","store","compose","applyMiddleware","createStore","ReactDOM","render","es","SearchArea_SearchArea","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.94e0e4f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"flight-row-container\":\"styles_flight-row-container__1itS1\",\"flight-row\":\"styles_flight-row__2_eLn\",\"flight-row-line\":\"styles_flight-row-line__5UXlW\",\"airplane\":\"styles_airplane__FpPiM\",\"stops-title\":\"styles_stops-title__2AWhY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"time\":\"styles_time__2wRcu\",\"city\":\"styles_city__3Q5Lg\",\"date\":\"styles_date__Wxxmz\",\"flight-info\":\"styles_flight-info__253Uj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ticket\":\"styles_ticket__KSjIn\",\"selling-area\":\"styles_selling-area__r4wBX\",\"info-area\":\"styles_info-area__Bg5G5\",\"logo\":\"styles_logo__1oTaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hop-filter\":\"styles_hop-filter__2tO-_\",\"only-action\":\"styles_only-action__B_jtz\",\"text-container\":\"styles_text-container__3EcQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3fRnz\",\"spin\":\"styles_spin__1nYRw\",\"m-size\":\"styles_m-size__2qMbW\",\"s-size\":\"styles_s-size__3tbuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-area\":\"styles_search-area__1a3Ju\",\"search-area-content\":\"styles_search-area-content__12f9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1uyWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox-container\":\"styles_checkbox-container__2Q69i\",\"checkmark\":\"styles_checkmark__1u2fk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickets-list\":\"styles_tickets-list__2mXpJ\",\"loader-container\":\"styles_loader-container__3N7Lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1VXZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-settings\":\"styles_search-settings__OSvKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-header\":\"styles_section-header__1UM6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency-radio-container\":\"styles_currency-radio-container__2vgNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-container\":\"styles_radio-container__hgfoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action-button\":\"styles_action-button__1RvkF\"};","module.exports = __webpack_public_path__ + \"static/media/airplane.4adfbc57.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-container\":\"styles_logo-container__GHb1W\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.7b1c42c7.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Типы экшенов тикета\n */\nexport enum TicketAction {\n\tSetTickets = 'TicketAction.SetTickets',\n\tSetTicketsFetchStatus = 'TicketAction.SetTicketsFetchStatus',\n\tAddTicketsFilters = 'TicketAction.AddTicketFilters',\n\tSetTicketsFilters = 'TicketAction.SetTicketsFilters',\n\tRemoveTicketFilters = 'TicketAction.RemoveTicketFilters',\n\tSetTicketsCurrency = 'TicketAction.SetTicketsCurrency'\n}","/**\n * Типы запросов http\n */\nexport enum HttpRequestMethod {\n\tGet = 'GET',\n\tPost = 'POST'\n}","/**\n * Список состояний асинхронных запросов\n */\nexport enum FetchStatus {\n\tInitial = 'initial',\n\tLoading = 'loading',\n\tComplete = 'complete',\n\tUpdating = 'updating',\n\tError = 'error'\n}","/**\n * Направления сортировки\n */\nexport enum SortDirection {\n\tAsc = 'asc',\n\tDesc = 'desc'\n}","export enum Currency {\n\tRUB = 'RUB',\n\tUSD = 'USD',\n\tEUR = 'EUR'\n}","import {Reducer} from 'redux';\n\nimport {TicketState} from '../../types/states';\nimport {RemovedTicketFiltersData} from '../../types/ticket';\nimport {ClientFilter} from '../../types/common';\nimport {Ticket} from '../../types/models';\n\nimport {TicketAction} from '../../enums/actions/ticket';\nimport {Currency, FetchStatus} from '../../enums/common';\n\nimport {TicketsActions} from '../../actions/ticket/types';\n\nconst initialState: TicketState = {\n\ttickets: [],\n\tfetchStatus: FetchStatus.Initial,\n\tfilters: [],\n\tcurrency: Currency.RUB\n};\n\n/**\n * Редьюсер тикетов\n */\nexport const ticketReducer: Reducer<TicketState, TicketsActions> = (\n\tstate: TicketState = initialState,\n\taction: TicketsActions\n) => {\n\tswitch (action.type) {\n\t\tcase TicketAction.SetTickets:\n\t\t\treturn {...state, tickets: [...action.payload]};\n\t\tcase TicketAction.SetTicketsFetchStatus:\n\t\t\treturn {...state, fetchStatus: action.payload};\n\t\tcase TicketAction.AddTicketsFilters:\n\t\t\treturn {...state, filters: [...state.filters, ...action.payload]};\n\t\tcase TicketAction.SetTicketsFilters:\n\t\t\treturn {...state, filters: [...action.payload]};\n\t\tcase TicketAction.SetTicketsCurrency:\n\t\t\treturn {...state, currency: action.payload};\n\t\tcase TicketAction.RemoveTicketFilters:\n\t\t\tconst {fields, values}: RemovedTicketFiltersData = action.payload.reduce(\n\t\t\t\t(acc: RemovedTicketFiltersData, {field, value}: ClientFilter<Ticket>) => {\n\t\t\t\t\tacc.fields.push(field);\n\t\t\t\t\tacc.values.push(value);\n\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfields: [],\n\t\t\t\t\tvalues: []\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilters: [\n\t\t\t\t\t...state.filters.filter(\n\t\t\t\t\t\t({field, value}) => !fields.includes(field) || !values.includes(value)\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};","/**\n * Типы экшенов валют\n */\nexport enum CurrencyAction {\n\tSetCurrenciesMap = 'CurrencyAction.SetCurrenciesMap',\n\tSetCurrencyFetchStatus = 'CurrencyAction.SetCurrencyFetchStatus'\n}","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус загрузки\n */\nexport const isLoading = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Loading;","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус завершения\n */\nexport const isComplete = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Complete;","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус ошибки\n */\nexport const isError = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Error;","/**\n * Склоняет слово \"пересадки\"\n */\nexport const pluralizeStops = (hops: number) => {\n\tif (hops === -1) return 'Все';\n\tif (hops === 0) return 'Без пересадок';\n\tif (hops === 1) return `${hops} пересадка`;\n\tif (hops >= 2 && hops <= 4) return `${hops} пересадки`;\n\tif (hops >= 5) return `${hops} пересадок`;\n\n\treturn ''\n};","import {FilterItem} from './types';\nimport {Ticket} from '../../../../../types/models';\nimport {ClientFilter} from '../../../../../types/common';\n\nimport {pluralizeStops} from '../../../../../helpers';\n\n/**\n * Значение фильтра на отсутствие фильтров\n */\nexport const ALL_HOP_FILTER_ITEMS_VALUE = -1;\n\n/**\n * Дефолтный фильтр на включение всех фильтров\n */\nexport const ALL_HOP_FILTER_ITEM: ClientFilter<Ticket> = {\n\tfield: 'stops',\n\tvalue: ALL_HOP_FILTER_ITEMS_VALUE\n};\n\n/**\n * Список фильтров контрола с фильтрами по пересадкам\n */\nexport const HOP_FILTERS_ITEMS: FilterItem<Ticket>[] = [\n\t{\n\t\tlabel: pluralizeStops(ALL_HOP_FILTER_ITEMS_VALUE),\n\t\tfilter: ALL_HOP_FILTER_ITEM\n\t},\n\t{\n\t\tlabel: pluralizeStops(0),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 0\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeStops(1),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 1\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeStops(2),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 2\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeStops(3),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 3\n\t\t}\n\t}\n];","import {CommonState} from '../../types/states';\nimport {Ticket} from '../../types/models';\nimport {ClientFilter} from '../../types/common';\n\nimport {Currency, FetchStatus, SortDirection} from '../../enums/common';\nimport {ALL_HOP_FILTER_ITEMS_VALUE} from '../../components/App/SearchArea/SearchSettingsCard/HopFilters/config';\n\nimport {sort} from '../../helpers';\n\n/**\n * Возвращает сортированные и фильтрованные билеты\n */\nexport const getSortedAndFilteredTickets = (\n\tstate: CommonState,\n\tsortField: keyof Ticket,\n\tdirection: SortDirection = SortDirection.Asc\n): Ticket[] => {\n\tconst {tickets, filters} = state.ticket;\n\tconst filteredTickets = filters.length\n\t\t? tickets.reduce(\n\t\t\t(acc: Ticket[], ticket: Ticket) => {\n\t\t\t\tconst passedFilters = filters.filter(\n\t\t\t\t\t({field, value}) => ticket[field] === value || value === ALL_HOP_FILTER_ITEMS_VALUE\n\t\t\t\t);\n\n\t\t\t\tif (passedFilters.length === 0) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\tacc.push(ticket);\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t)\n\t\t: tickets;\n\n\treturn sort<Ticket>(filteredTickets, sortField, direction);\n};\n\n/**\n * Возвращает состояние запроса за билетами\n */\nexport const getTicketsFetchStatus = (state: CommonState): FetchStatus =>\n\tstate.ticket.fetchStatus;\n\n/**\n * Возвращает состояние фильтров билетов\n */\nexport const getTicketFilters = (state: CommonState): ClientFilter<Ticket>[] =>\n\tstate.ticket.filters;\n\n/**\n * Возвращает текущую валюту для билетов\n */\nexport const getTicketsCurrency = (state: CommonState): Currency =>\n\tstate.ticket.currency;\n","import {SortDirection} from '../enums/common';\n\n/**\n * Сортирует сущности по полю\n */\nexport const sort = <T>(\n\titems: T[],\n\tsortField: keyof T,\n\tdirection: SortDirection = SortDirection.Asc\n) => {\n\treturn items.sort((a: T, b: T) => {\n\t\tif (direction === SortDirection.Asc) {\n\t\t\tif (a[sortField] > b[sortField]) return 1;\n\t\t\tif (a[sortField] < b[sortField]) return -1;\n\t\t\treturn 0;\n\t\t}\n\t\tif (direction === SortDirection.Desc) {\n\t\t\tif (a[sortField] < b[sortField]) return 1;\n\t\t\tif (a[sortField] > b[sortField]) return -1;\n\t\t\treturn 0;\n\t\t}\n\t\treturn 0;\n\t});\n};","import {Reducer} from 'redux';\n\nimport {CurrencyState} from '../../types/states';\nimport {CurrencyActions} from '../../actions/currency/types';\n\nimport {Currency, FetchStatus} from '../../enums/common';\nimport {CurrencyAction} from '../../enums/actions/currency';\n\nconst initialValues: CurrencyState = {\n\tcurrencies: {\n\t\t[Currency.RUB]: 1,\n\t\t[Currency.USD]: 1,\n\t\t[Currency.EUR]: 1\n\t},\n\tfetchStatus: FetchStatus.Initial\n};\n\n/**\n * Редьюсер валют\n */\nexport const currencyReducer: Reducer<CurrencyState, CurrencyActions> = (\n\tstate: CurrencyState = initialValues,\n\taction: CurrencyActions) => {\n\t\tswitch (action.type) {\n\t\t\tcase CurrencyAction.SetCurrenciesMap:\n\t\t\t\treturn {...state, currencies: action.payload};\n\t\t\tcase CurrencyAction.SetCurrencyFetchStatus:\n\t\t\t\treturn {...state, fetchStatus: action.payload};\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n};","/**\n * Размеры спиннера\n */\nexport enum SpinnerSize {\n\tL = 'l-size',\n\tM = 'm-size',\n\tS = 's-size'\n}","import {CommonState} from '../../types/states';\nimport {CurrenciesMap} from '../../types/models';\nimport {Currency, FetchStatus} from '../../enums/common';\n\n/**\n * Возвращает словарь валют\n */\nexport const getCurrenciesMap = (state: CommonState): CurrenciesMap =>\n\tstate.currency.currencies;\n\n/**\n * Возвращает состояние запроса за словарем валют\n */\nexport const getCurrencyFetchStatus = (state: CommonState): FetchStatus =>\n\tstate.currency.fetchStatus;\n/**\n * Возвращает коэффициент конвертации базовой валюты в искомую\n */\nexport const getCurrencyRate = (state: CommonState, currency: Currency): number => {\n\tconst currenciesMap = getCurrenciesMap(state);\n\n\treturn currenciesMap[currency];\n};","import {combineReducers} from 'redux';\n\nimport {CommonState} from '../types/states';\n\nimport {ticketReducer} from './ticket';\nimport {currencyReducer} from './currency';\n\n/**\n * Собирает все редьюсеры проекта\n */\nexport const reducers = combineReducers<CommonState>({\n\tticket: ticketReducer,\n\tcurrency: currencyReducer\n});","import React from 'react';\n\nimport {FlexWrapperProps} from './types';\n\n/**\n * Компонента-враппер для позиционирования чайлдов через Flex API\n */\nexport const FlexWrapper: React.FC<FlexWrapperProps> = (\n\t{\n\t\tflexDirection = 'row',\n\t\talignItems = 'center',\n\t\tjustifyContent = 'center',\n\t\tclassName,\n\t\tchildren\n\t}\n) => (\n\t<div\n\t\tstyle={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection,\n\t\t\talignItems,\n\t\t\tjustifyContent,\n\t\t}}\n\t\tclassName={className}\n\t>{children}</div>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {CardProps} from './types';\n\n/**\n * Белая карта-подложка\n */\nexport const Card: React.FC<CardProps> = ({children, className}) => (\n\t<div className={className ? `${styles.card} ${className}` : styles.card}>{children}</div>\n);","import {\n\tAddTicketsFilters,\n\tRemoveTicketFilters,\n\tSetTickets,\n\tSetTicketsCurrency,\n\tSetTicketsFetchStatus,\n\tSetTicketsFilters\n} from './types';\nimport {Ticket} from '../../types/models';\nimport {ClientFilter} from '../../types/common';\n\nimport {TicketAction} from '../../enums/actions/ticket';\nimport {Currency, FetchStatus} from '../../enums/common';\n\n/**\n * Устанавливает тикеты в стейт\n */\nexport const setTickets = (tickets: Ticket[]): SetTickets => ({\n\ttype: TicketAction.SetTickets,\n\tpayload: tickets\n});\n\n/**\n * Устанавливает состояние запроса за тикетами\n */\nexport const setTicketsFetchStatus = (fetchStatus: FetchStatus): SetTicketsFetchStatus => ({\n\ttype: TicketAction.SetTicketsFetchStatus,\n\tpayload: fetchStatus\n});\n\n/**\n * Устанавливает фильтры по тикетам\n */\nexport const setTicketsFilters = (filters: ClientFilter<Ticket>[]): SetTicketsFilters => ({\n\ttype: TicketAction.SetTicketsFilters,\n\tpayload: filters\n});\n\n/**\n * Добавляет фильтры по тикетам\n */\nexport const addTicketsFilters = (filters: ClientFilter<Ticket>[]): AddTicketsFilters => ({\n\ttype: TicketAction.AddTicketsFilters,\n\tpayload: filters\n});\n\n/**\n * Удаляет фильтр\n */\nexport const removeTicketFilters = (filters: ClientFilter<Ticket>[]): RemoveTicketFilters => ({\n\ttype: TicketAction.RemoveTicketFilters,\n\tpayload: filters\n});\n\n/**\n * Устанавливает текущую валюту тикетов\n */\nexport const setTicketsCurrency = (currency: Currency): SetTicketsCurrency => ({\n\ttype: TicketAction.SetTicketsCurrency,\n\tpayload: currency\n});\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {CheckboxProps} from './types';\n\n/**\n * Кастомный чекбокс\n */\nexport const Checkbox: React.FC<CheckboxProps> = ({onClick, checked}) => (\n\t<label className={styles['checkbox-container']}>\n\t\t<input type=\"checkbox\" checked={checked} onChange={onClick}/>\n\t\t<span className={styles.checkmark}></span>\n\t</label>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {HopFilterProps} from './types';\n\nimport {ALL_HOP_FILTER_ITEMS_VALUE} from '../config';\n\nimport {Checkbox} from '../../../../../Shared/Checkbox';\nimport {FlexWrapper} from '../../../../../Shared/FlexWrapper';\n\n/**\n * Фильтр на пересадку\n */\nexport const HopFilter: React.FC<HopFilterProps> = ({filter, checked, label, onAdd, onRemove}) => {\n\t/**\n\t * Обработчик клика по лейблу и чекбоксу\n\t */\n\tconst onFilterClick = (\n\t\te: React.MouseEvent<HTMLDivElement> | React.ChangeEvent<HTMLElement>,\n\t\tforce: boolean = false\n\t) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tif (force) {\n\t\t\tonAdd(filter, force);\n\t\t\treturn;\n\t\t}\n\t\tchecked ? onRemove(filter) : onAdd(filter, force);\n\t};\n\n\tconst isAllFiltersValue = filter.value === ALL_HOP_FILTER_ITEMS_VALUE;\n\n\treturn (\n\t\t<div className={styles['hop-filter']} onClick={(e) => onFilterClick(e)}>\n\t\t\t<Checkbox checked={checked} onClick={(e) => onFilterClick(e)}/>\n\t\t\t<FlexWrapper justifyContent=\"space-between\" className={styles['text-container']}>\n\t\t\t\t<span>{label}</span>\n\t\t\t\t{!isAllFiltersValue && <div\n\t\t\t\t\tclassName={styles['only-action']}\n\t\t\t\t\tonClick={(e) => onFilterClick(e, true)}\n\t\t\t\t>\n\t\t\t\t\tТолько\n\t\t\t\t</div>}\n\t\t\t</FlexWrapper>\n\t\t</div>\n\t);\n};","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport {HopFiltersDispatchProps, HopFiltersOwnProps, HopFiltersProps, HopFiltersStateProps} from './types';\nimport {CommonState} from '../../../../../types/states';\nimport {ClientFilter} from '../../../../../types/common';\nimport {Ticket} from '../../../../../types/models';\n\nimport {ALL_HOP_FILTER_ITEM, ALL_HOP_FILTER_ITEMS_VALUE, HOP_FILTERS_ITEMS} from './config';\n\nimport {addTicketsFilters, removeTicketFilters, setTicketsFilters} from '../../../../../actions/ticket';\nimport {getTicketFilters} from '../../../../../reducers/ticket';\n\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\nimport {HopFilter} from './HopFilter';\n\nconst mapStateToProps: MapStateToProps<\n\tHopFiltersStateProps,\n\tHopFiltersOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\tfilters: getTicketFilters(state)\n});\n\nconst mapDispatchToProps: MapDispatchToProps<\n\tHopFiltersDispatchProps,\n\tHopFiltersOwnProps\n> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTicketsFilters,\n\t\t\taddTicketsFilters,\n\t\t\tremoveTicketFilter: removeTicketFilters\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Фильтры пересадок с карточки настроек поиска\n */\nexport const HopFilters = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({addTicketsFilters, setTicketsFilters, removeTicketFilter, filters}) => {\n\t/**\n\t * Проверяет добавлен ли текущий фильтр\n\t */\n\tconst isIncludesFilter = (\n\t\t{field: searchField, value: searchValue}: ClientFilter<Ticket>\n\t): boolean => {\n\t\tconst foundFilter = filters.find(\n\t\t\t({field, value}: ClientFilter<Ticket>) => field === searchField && value === searchValue\n\t\t);\n\n\t\treturn !!foundFilter;\n\t};\n\n\t/**\n\t * Обработчик добавления фильтра\n\t */\n\tconst onAddFilter = (filter: ClientFilter<Ticket>, force: boolean) => {\n\t\tif (filter.value === ALL_HOP_FILTER_ITEMS_VALUE) {\n\t\t\tconst filters = [...HOP_FILTERS_ITEMS.map(({filter}) => filter), filter];\n\t\t\tsetTicketsFilters(filters);\n\t\t\treturn;\n\t\t}\n\n\t\tforce ? setTicketsFilters([filter]): addTicketsFilters([filter])\n\t};\n\n\t/**\n\t * Обработчик удаления фильтра\n\t */\n\tconst onRemoveFilter = (filter: ClientFilter<Ticket>) => {\n\t\tif (filter.value === ALL_HOP_FILTER_ITEMS_VALUE) {\n\t\t\tsetTicketsFilters([]);\n\t\t\treturn;\n\t\t}\n\t\tremoveTicketFilter([filter, ALL_HOP_FILTER_ITEM]);\n\t};\n\n\t/**\n\t * Строит список фильтров по пересадкам\n\t */\n\tconst buildCheckboxFiltersList = (): React.ReactNode[] => {\n\t\treturn HOP_FILTERS_ITEMS.map(({label, filter}) => (\n\t\t\t<HopFilter\n\t\t\t\tkey={filter.value as string}\n\t\t\t\tlabel={label}\n\t\t\t\tfilter={filter}\n\t\t\t\tchecked={isIncludesFilter(filter)}\n\t\t\t\tonAdd={onAddFilter}\n\t\t\t\tonRemove={onRemoveFilter}\n\t\t\t/>\n\t\t))\n\t};\n\t\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\">\n\t\t\t{buildCheckboxFiltersList()}\n\t\t</FlexWrapper>\n\t);\n}) as React.FC<HopFiltersProps>);\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\n/**\n * Заголовок секции на карточке поиска\n */\nexport const SectionHeader: React.FC = ({children}) => (\n\t<span className={styles['section-header']}>{children}</span>\n);","import {SetCurrenciesMap, SetCurrencyFetchStatus} from './types';\nimport {CurrenciesMap} from '../../types/models';\n\nimport {CurrencyAction} from '../../enums/actions/currency';\nimport {FetchStatus} from '../../enums/common';\n\n/**\n * Устанавливает словарь валют в хранилище приложения\n */\nexport const setCurrenciesMap = (currencies: CurrenciesMap): SetCurrenciesMap => ({\n\ttype: CurrencyAction.SetCurrenciesMap,\n\tpayload: currencies\n});\n\n/**\n * Устанавливает состояние запроса за словарем валют\n */\nexport const setCurrencyFetchStatus = (fetchStatus: FetchStatus): SetCurrencyFetchStatus => ({\n\ttype: CurrencyAction.SetCurrencyFetchStatus,\n\tpayload: fetchStatus\n});","import {RadioItem} from '../../../../Shared/Radio/types';\nimport {Currency} from '../../../../../enums/common';\n\n/**\n * Список элементов радиобаттона валют\n */\nexport const CURRENCY_ITEMS: RadioItem[] = [\n\t{\n\t\tlabel: Currency.RUB,\n\t\tvalue: Currency.RUB\n\t},\n\t{\n\t\tlabel: Currency.USD,\n\t\tvalue: Currency.USD\n\t},\n\t{\n\t\tlabel: Currency.EUR,\n\t\tvalue: Currency.EUR\n\t}\n];","import React from 'react';\n\nimport {RadioItem, RadioProps} from './types';\n\nimport styles from './styles.module.css';\n\n/**\n * Компонета кастомного радиобаттона\n */\nexport const Radio: React.FC<RadioProps> = ({value, onChange, items}) => {\n\t/**\n\t * Строит список кнопок радиобаттона\n\t */\n\tconst buildRadioButtonsList = () => items.map(({label, value: itemValue}: RadioItem) => (\n\t\t<span key={itemValue}>\n\t\t\t<input type=\"radio\"\n\t\t\t\tid={itemValue}\n\t\t\t\tvalue={itemValue}\n\t\t\t\tonChange={onRadioChange}\n\t\t\t\tchecked={value === itemValue}\n\t\t\t\tname=\"currency\" />\n\t\t\t<label htmlFor={itemValue}>{label}</label>\n\t\t</span>\n\t));\n\n\t/**\n\t * Обработчик изменения радиобаттона\n\t */\n\tconst onRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className={styles['radio-container']}>\n\t\t\t<fieldset>\n\t\t\t\t{buildRadioButtonsList()}\n\t\t\t</fieldset>\n\t\t</div>\n\t);\n};","import {HttpRequestMethod} from '../enums/common';\n\n/**\n * Выполняет запрос на сервер\n */\nexport const request = <R ={}>(\n\turl: string,\n\tmethod: HttpRequestMethod = HttpRequestMethod.Get,\n\tbody: Document | BodyInit | null = null\n): Promise<R> => {\n\treturn new Promise<R>((resolve, reject) => {\n\t\tconst xmlRequest = new XMLHttpRequest();\n\n\t\txmlRequest.open(method, url);\n\n\t\txmlRequest.send(body);\n\n\t\txmlRequest.onload = () => resolve(xmlRequest.response ? JSON.parse(xmlRequest.response) : null);\n\n\t\txmlRequest.onerror = () => reject(xmlRequest.response ? JSON.parse(xmlRequest.response) : null);\n\t});\n};","import {Currency} from './enums/common';\n\n/**\n * Основной конфиг приложения\n */\nexport const CommonConfig = {\n\t/**\n\t * Ключ API данных по конвертации валют\n\t */\n\tCURRENCIES_API_KEY: 'b7da7a0fcc0843fcdc3190be64072c7f',\n\t/**\n\t * Базовая валюта стоимостей\n\t */\n\tBASE_CURRENCY: Currency.RUB\n};","import {TicketDto} from '../types/dto';\nimport {Ticket} from '../types/models';\n\n/**\n * Мапит транспортную сущность билета на клиентскую\n */\nexport const mapTicket = (ticketDto: TicketDto): Ticket => {\n\treturn {\n\t\torigin: ticketDto.origin,\n\t\toriginName: ticketDto.origin_name,\n\t\tdestination: ticketDto.destination,\n\t\tdestinationName: ticketDto.destination_name,\n\t\tdepartureDate: new Date(ticketDto.departure_date),\n\t\tdepartureTime: ticketDto.departure_time,\n\t\tarrivalDate: new Date(ticketDto.arrival_date),\n\t\tarrivalTime: ticketDto.arrival_time,\n\t\tcarrier: ticketDto.carrier,\n\t\tstops: ticketDto.stops,\n\t\tprice: ticketDto.price\n\t};\n};","import {CurrenciesMapDto} from '../types/dto';\nimport {CurrenciesMap} from '../types/models';\n\nimport {Currency} from '../enums/common';\n\n/**\n * Маппит серверный словарь валют на клиентский\n */\nexport const mapCurrencies = (currenciesMap: CurrenciesMapDto): CurrenciesMap => {\n\treturn {\n\t\t[Currency.USD]: currenciesMap[Currency.USD] || 1,\n\t\t[Currency.EUR]: currenciesMap[Currency.EUR] || 1,\n\t\t[Currency.RUB]: currenciesMap[Currency.RUB] || 1,\n\t};\n}","import {request} from './request';\n\nimport {CurrenciesMap} from '../types/models';\n\nimport {CommonConfig} from '../config';\nimport {Currency} from '../enums/common';\n\nimport {mapCurrencies} from '../mappers';\n\n/**\n * Сервис валют\n */\nexport class CurrencyService {\n\t/**\n\t * Возвращает мапу валют\n\t */\n\tpublic static async get(baseCurrency: Currency = CommonConfig.BASE_CURRENCY): Promise<CurrenciesMap> {\n\t\tconst {rates} = await request<{rates: CurrenciesMap}>(`https://data.fixer.io/api/latest\n\t\t\t?access_key=${CommonConfig.CURRENCIES_API_KEY}\n\t\t\t&base=${baseCurrency}\n\t\t\t&symbols=${Currency.EUR},${Currency.USD}`);\n\n\t\treturn mapCurrencies(rates);\n\t}\n}","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {SpinnerProps} from './types';\n\nimport {SpinnerSize} from './config';\n\n/**\n * Простой спиннер\n */\nexport const Spinner: React.FC<SpinnerProps> = ({size = SpinnerSize.L}) => {\n\tconst classes = size !== SpinnerSize.L\n\t\t? `${styles.spinner} ${styles[size]}`\n\t\t: styles.spinner;\n\n\treturn (\n\t\t<div className={classes}></div>\n\t);\n}","/**\n * Выравнивание элементов компоненты информации отправления / прибытия\n */\nexport enum FlightInfoAlign {\n\tLeft = 'left',\n\tRight = 'right'\n}","import React, {useEffect} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport styles from './styles.module.css';\n\nimport {CurrencyRadioDispatchProps, CurrencyRadioOwnProps, CurrencyRadioProps, CurrencyRadioStateProps} from './types';\nimport {CommonState} from '../../../../../types/states';\n\nimport {setTicketsCurrency} from '../../../../../actions/ticket';\nimport {setCurrenciesMap, setCurrencyFetchStatus} from '../../../../../actions/currency';\n\nimport {getTicketsCurrency} from '../../../../../reducers/ticket';\nimport {getCurrencyFetchStatus} from '../../../../../reducers/currency';\n\nimport {Currency, FetchStatus} from '../../../../../enums/common';\nimport {CURRENCY_ITEMS} from './config';\n\nimport {isComplete, isError, isLoading, isInitial} from '../../../../../helpers';\n\nimport {Radio} from '../../../../Shared/Radio';\nimport {CurrencyService} from '../../../../../services/currency';\nimport {Spinner} from '../../../../Shared/Spinner';\nimport {SpinnerSize} from '../../../../Shared/Spinner/config';\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\n\nconst mapStateToProps: MapStateToProps<\n\tCurrencyRadioStateProps,\n\tCurrencyRadioOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\tticketsCurrency: getTicketsCurrency(state),\n\tcurrenciesFetchStatus: getCurrencyFetchStatus(state)\n});\n\nconst mapDispatchToProps: MapDispatchToProps<\n\tCurrencyRadioDispatchProps,\n\tCurrencyRadioOwnProps\n> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTicketsCurrency,\n\t\t\tsetCurrenciesMap,\n\t\t\tsetCurrencyFetchStatus\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Радио баттон выбора валюты\n */\nexport const CurrencyRadio = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({\n\tsetTicketsCurrency,\n\tsetCurrenciesMap,\n\tsetCurrencyFetchStatus,\n\tcurrenciesFetchStatus,\n\tticketsCurrency\n}) => {\n\tuseEffect(() => {\n\t\t// Не делать запрос за данными, в случае, когда где-либо данные словаря уже запрошены\n\t\tif (isInitial(currenciesFetchStatus)) {\n\t\t\tsetCurrencyFetchStatus(FetchStatus.Loading);\n\t\t\tCurrencyService.get().then(\n\t\t\t\t(currencies) => {\n\t\t\t\t\tsetCurrenciesMap(currencies);\n\t\t\t\t\tsetCurrencyFetchStatus(FetchStatus.Complete);\n\t\t\t\t},\n\t\t\t\t() => setCurrencyFetchStatus(FetchStatus.Error)\n\t\t\t);\n\t\t}\n\t}, [setCurrenciesMap, setCurrencyFetchStatus, currenciesFetchStatus]);\n\n\t/**\n\t * Обработчик изменения радиобаттона валют\n\t */\n\tconst onChangeRadio = (currency: string) => setTicketsCurrency(currency as Currency);\n\n\treturn (\n\t\t<FlexWrapper className={styles['currency-radio-container']}>\n\t\t\t{isLoading(currenciesFetchStatus) && <Spinner size={SpinnerSize.S}/>}\n\t\t\t{isError(currenciesFetchStatus) && <div>Что-то пошло не так :/</div>}\n\t\t\t{isComplete(currenciesFetchStatus) && <Radio\n\t\t\t\titems={CURRENCY_ITEMS}\n\t\t\t\tonChange={onChangeRadio}\n\t\t\t\tvalue={ticketsCurrency}\n\t\t\t/>}\n\t\t</FlexWrapper>\n\t);\n}) as React.FC<CurrencyRadioProps>);","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус инициализации\n */\nexport const isInitial = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Initial;","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Card} from '../../../Shared/Card';\nimport {HopFilters} from './HopFilters';\nimport {SectionHeader} from './SectionHeader';\nimport {CurrencyRadio} from './CurrencyRadio';\n\n/**\n * Карточка настроек поиска билетов\n */\nexport const SearchSettingsCard: React.FC = () => (\n\t<Card>\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles['search-settings']}>\n\t\t\t<SectionHeader>Валюта</SectionHeader>\n\t\t\t<CurrencyRadio />\n\t\t\t<SectionHeader>Количество пересадок</SectionHeader>\n\t\t\t<HopFilters />\n\t\t</FlexWrapper>\n\t</Card>\n);","import {request} from './request';\n\nimport {TicketDto} from '../types/dto';\n\nimport {mapTicket} from '../mappers';\n\n/**\n * Сервис билетов\n */\nexport class TicketService {\n\t/**\n\t * Возвращает список билетов\n\t */\n\tpublic static async get() {\n\t\tconst {tickets} = await request<{tickets: TicketDto[]}>(process.env.PUBLIC_URL + '/tickets.json');\n\n\t\treturn tickets.map(mapTicket);\n\t}\n}","import React from 'react';\n\nimport {AirlineLogoProps} from './types';\n\n/**\n * Лого авиакомпании ;-)\n */\nexport const AirlineLogo: React.FC<AirlineLogoProps> = ({iata, height = 50, width = 150, className}) => (\n\t<img src={`http://pics.avs.io/${width}/${height}/${iata}.png`} alt={iata} className={className}/>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {ButtonProps} from './types';\n\n/**\n * Кастомная кнопка\n */\nexport const Button: React.FC<ButtonProps> = ({children}) => (\n\t<button className={styles['action-button']}>{children}</button>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\nimport airplaneIcon from './airplane.svg';\n\nimport {FlightRowProps} from './types';\n\nimport {pluralizeStops} from '../../../../../../helpers';\n\nimport {FlexWrapper} from '../../../../../Shared/FlexWrapper';\n\n/**\n * Строка перелета с пересадками\n */\nexport const FlightRow: React.FC<FlightRowProps> = ({stops}) => (\n\t<FlexWrapper\n\t\tflexDirection=\"column\"\n\t\tjustifyContent=\"start\"\n\t\tclassName={styles['flight-row-container']}\n\t>\n\t\t<span className={styles['stops-title']}>{pluralizeStops(stops)}</span>\n\t\t<FlexWrapper className={styles['flight-row']}>\n\t\t\t<span className={styles['flight-row-line']}></span>\n\t\t\t<img src={airplaneIcon} alt=\"самолет\" className={styles.airplane}/>\n\t\t</FlexWrapper>\n\t</FlexWrapper>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlightInfoProps} from './types';\n\nimport {FlightInfoAlign} from './config';\n\nimport {FlexWrapper} from '../../../../../Shared/FlexWrapper';\nimport {getTicketFormatDate} from './helpers';\n\n/**\n * Блок информации отправления / прибытия\n */\nexport const FlightInfo: React.FC<FlightInfoProps> = ({align, date, time, city, cityName}) => (\n\t<FlexWrapper\n\t\tflexDirection=\"column\"\n\t\talignItems={align === FlightInfoAlign.Left ? 'flex-start' : 'flex-end'}\n\t\tclassName={styles['flight-info']}\n\t>\n\t\t<span className={styles.time}>{time}</span>\n\t\t{align === FlightInfoAlign.Left && <span className={styles.city}>{city}, {cityName}</span>}\n\t\t{align === FlightInfoAlign.Right && <span className={styles.city}>{cityName}, {city}</span>}\n\t\t<span className={styles.date}>{getTicketFormatDate(date)}</span>\n\t</FlexWrapper>\n);","/**\n * Форматирует дату в формат билета\n */\nexport const getTicketFormatDate = (date: Date) =>\n\tdate.toLocaleDateString(\"ru-RU\", {\n\t\tday: \"numeric\",\n\t\tmonth: \"short\",\n\t\tyear: \"numeric\",\n\t\tweekday: \"short\"\n\t})\n\t.split(',')\n\t.map((part: string) => part.trim())\n\t.reverse()\n\t.join(', ');","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {TicketProps} from './types';\n\nimport {displayCurrency} from '../../../../../helpers';\n\nimport {FlightInfoAlign} from './FlightInfo/config';\n\nimport {Card} from '../../../../Shared/Card';\nimport {AirlineLogo} from '../../../../Shared/AirlineLogo';\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\nimport {Button} from '../../../../Shared/Button';\nimport {FlightRow} from './FlightRow';\nimport {FlightInfo} from './FlightInfo';\n\n/**\n * Карточка билета\n */\nexport const Ticket: React.FC<TicketProps> = ({ticket, rate, currency}) => {\n\tconst {\n\t\tprice,\n\t\tstops,\n\t\tcarrier,\n\t\tdepartureDate,\n\t\tdepartureTime,\n\t\tarrivalDate,\n\t\tarrivalTime,\n\t\toriginName,\n\t\torigin,\n\t\tdestinationName,\n\t\tdestination\n\t} = ticket;\n\n\tconst actualPrice = price * rate;\n\n\treturn (\n\t\t<Card className={styles.ticket}>\n\t\t\t<FlexWrapper alignItems=\"stretch\">\n\t\t\t\t<FlexWrapper flexDirection=\"column\" className={styles['selling-area']}>\n\t\t\t\t\t<AirlineLogo iata={carrier} className={styles.logo}/>\n\t\t\t\t\t<Button onClick={() => {}}>{`Купить за ${displayCurrency(actualPrice, currency)}`}</Button>\n\t\t\t\t</FlexWrapper>\n\t\t\t\t<FlexWrapper\n\t\t\t\t\tflexDirection=\"column\"\n\t\t\t\t\tjustifyContent=\"start\"\n\t\t\t\t\talignItems=\"stretch\"\n\t\t\t\t\tclassName={styles['info-area']}\n\t\t\t\t>\n\t\t\t\t\t<FlexWrapper >\n\t\t\t\t\t<FlightInfo\n\t\t\t\t\t\talign={FlightInfoAlign.Left}\n\t\t\t\t\t\tdate={departureDate}\n\t\t\t\t\t\ttime={departureTime}\n\t\t\t\t\t\tcity={origin}\n\t\t\t\t\t\tcityName={originName}\n\t\t\t\t\t/>\n\t\t\t\t\t<FlightRow stops={stops}/>\n\t\t\t\t\t<FlightInfo\n\t\t\t\t\t\talign={FlightInfoAlign.Right}\n\t\t\t\t\t\tdate={arrivalDate}\n\t\t\t\t\t\ttime={arrivalTime}\n\t\t\t\t\t\tcity={destination}\n\t\t\t\t\t\tcityName={destinationName}\n\t\t\t\t\t/>\n\t\t\t\t</FlexWrapper>\n\t\t\t\t</FlexWrapper>\n\t\t\t</FlexWrapper>\n\t\t</Card>\n\t);\n};","import {Currency} from '../enums/common';\n\n/**\n * Отображает знак валюты в русской локали\n */\nexport const displayCurrency = (value: number, currency: Currency) =>\n\tvalue.toLocaleString(\"ru-RU\", {\n\t\tcurrency,\n\t\tstyle: \"currency\",\n\t\tmaximumFractionDigits: 0,\n\t\tminimumFractionDigits: 0\n\t})","import React, {useEffect} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport styles from './styles.module.css';\n\nimport {TicketListDispatchProps, TicketListOwnProps, TicketListProps, TicketListStateProps} from './types';\nimport {Ticket} from '../../../../types/models';\nimport {CommonState} from '../../../../types/states';\n\nimport {TicketService} from '../../../../services';\n\nimport {setTickets, setTicketsFetchStatus} from '../../../../actions/ticket';\n\nimport {getSortedAndFilteredTickets, getTicketsCurrency, getTicketsFetchStatus} from '../../../../reducers/ticket';\nimport {getCurrencyRate} from '../../../../reducers/currency';\n\nimport {FetchStatus} from '../../../../enums/common';\nimport {SpinnerSize} from '../../../Shared/Spinner/config';\n\nimport {isComplete, isError, isLoading} from '../../../../helpers';\n\nimport {Ticket as TicketComponent} from './Ticket';\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Spinner} from '../../../Shared/Spinner';\n\nconst mapStateToProps: MapStateToProps<\n\tTicketListStateProps,\n\tTicketListOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\ttickets: getSortedAndFilteredTickets(state, 'price'),\n\tticketsFetchStatus: getTicketsFetchStatus(state),\n\tticketsCurrency: getTicketsCurrency(state),\n\trate: getCurrencyRate(state, getTicketsCurrency(state))\n});\n\nconst mapDispatchToProps: MapDispatchToProps<TicketListDispatchProps, TicketListOwnProps> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTickets,\n\t\t\tsetTicketsFetchStatus\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Список билетов\n */\nexport const TicketsList = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({\n\tsetTickets,\n\tsetTicketsFetchStatus,\n\ttickets,\n\tticketsFetchStatus,\n\tticketsCurrency,\n\trate\n}) => {\n\tuseEffect(() => {\n\t\tsetTicketsFetchStatus(FetchStatus.Loading);\n\t\tTicketService.get().then((tickets) => {\n\t\t\tsetTickets(tickets);\n\t\t\tsetTicketsFetchStatus(FetchStatus.Complete);\n\t\t},() => setTicketsFetchStatus(FetchStatus.Error));\n\t}, [setTickets, setTicketsFetchStatus]);\n\n\t/**\n\t * Строит список билетов\n\t */\n\tconst buildTicketList = (tickets: Ticket[]) =>\n\t\ttickets.map((ticket: Ticket, index: number) => (\n\t\t\t<TicketComponent\n\t\t\t\tkey={index}\n\t\t\t\tticket={ticket}\n\t\t\t\trate={rate}\n\t\t\t\tcurrency={ticketsCurrency}\n\t\t\t/>\n\t\t));\n\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles['tickets-list']}>\n\t\t\t{isLoading(ticketsFetchStatus) && (\n\t\t\t\t<FlexWrapper alignItems=\"center\" className={styles['loader-container']}>\n\t\t\t\t\t<Spinner size={SpinnerSize.M}/>\n\t\t\t\t</FlexWrapper>\n\t\t\t)}\n\t\t\t{isError(ticketsFetchStatus) && <span>Извините, что-то пошло не так :/</span>}\n\t\t\t{isComplete(ticketsFetchStatus) && buildTicketList(tickets)}\n\t\t</FlexWrapper>\n\t)\n}) as React.FC<TicketListProps>);","import React from 'react';\nimport LogoSvg from './Assets/Logo.svg';\n\n/**\n * Компонента, отображающая svg лого\n */\nexport const Logo: React.FC = () => (\n\t<img src={LogoSvg} alt=\"logo\" />\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Logo} from './Logo';\n\n/**\n * Контейнер для лого сайта\n */\nexport const LogoContainer: React.FC = () => ((\n\t<FlexWrapper className={styles['logo-container']}>\n\t\t<Logo />\n\t</FlexWrapper>\n));","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../Shared/FlexWrapper';\nimport {SearchSettingsCard} from './SearchSettingsCard';\nimport {TicketsList} from './TicketsList';\nimport {LogoContainer} from './LogoContainer';\n\n/**\n * Компонента, содержащая зону поиска\n */\nexport const SearchArea: React.FC = () => (\n\t<FlexWrapper\n\t\tflexDirection=\"column\"\n\t\tjustifyContent=\"start\"\n\t\talignItems=\"stretch\"\n\t\tclassName={styles['search-area']}\n\t>\n\t\t<LogoContainer />\n\t\t<FlexWrapper className={styles['search-area-content']} alignItems=\"flex-start\">\n\t\t\t<SearchSettingsCard />\n\t\t\t<TicketsList />\n\t\t</FlexWrapper>\n\t</FlexWrapper>\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, compose, createStore} from 'redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport {reducers} from './reducers';\n\nimport {App} from './components/App';\n\nconst middlewares = [];\nif (process.env.NODE_ENV === 'development') {\n\t// Избегает добавление логгера в продакшн\n\tconst { logger } = require('redux-logger');\n\n\tmiddlewares.push(logger);\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducers);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../Shared/FlexWrapper';\nimport {SearchArea} from './SearchArea';\n\n/**\n * Стартовая компонента приложения\n */\nexport const App: React.FC = () => {\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles.app}>\n\t\t\t<SearchArea />\n\t\t</FlexWrapper>\n\t);\n};"],"sourceRoot":""}