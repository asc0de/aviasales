{"version":3,"sources":["components/App/SearchArea/SearchSettingsCard/HopFilters/HopFilter/styles.module.css","components/Shared/Spinner/styles.module.css","components/App/SearchArea/TicketsList/Ticket/styles.module.css","components/App/SearchArea/styles.module.css","components/Shared/Checkbox/styles.module.css","components/App/SearchArea/TicketsList/styles.module.css","components/App/styles.module.css","components/App/SearchArea/SearchSettingsCard/styles.module.css","components/Shared/Card/styles.module.css","components/App/SearchArea/SearchSettingsCard/SectionHeader/styles.module.css","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/styles.module.css","components/Shared/Radio/styles.module.css","components/Shared/Button/styles.module.css","components/App/SearchArea/LogoContainer/styles.module.css","components/App/SearchArea/LogoContainer/Logo/Assets/Logo.svg","serviceWorker.ts","enums/actions/ticket.ts","enums/common/HttpRequestMethod.ts","enums/common/FetchStatus.ts","enums/common/SortDirection.ts","enums/common/Currency.ts","reducers/ticket/reducer.ts","enums/actions/currency.ts","components/App/SearchArea/SearchSettingsCard/HopFilters/helpers/pluralize-hops.ts","components/App/SearchArea/SearchSettingsCard/HopFilters/config.ts","helpers/is-loading.ts","helpers/is-complete.ts","helpers/is-error.ts","reducers/ticket/selectors.ts","helpers/sort.ts","reducers/currency/reducer.ts","components/Shared/Spinner/config.ts","reducers/currency/selectors.ts","reducers/index.ts","components/Shared/FlexWrapper/index.tsx","components/Shared/Card/index.tsx","actions/ticket/index.ts","components/Shared/Checkbox/index.tsx","components/App/SearchArea/SearchSettingsCard/HopFilters/HopFilter/index.tsx","components/App/SearchArea/SearchSettingsCard/HopFilters/index.tsx","components/App/SearchArea/SearchSettingsCard/SectionHeader/index.tsx","actions/currency/index.ts","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/config.ts","components/Shared/Radio/index.tsx","services/request.ts","config.ts","mappers/ticket.ts","mappers/currency.ts","services/currency.ts","components/Shared/Spinner/index.tsx","components/App/SearchArea/SearchSettingsCard/CurrencyRadio/index.tsx","helpers/is-initial.ts","components/App/SearchArea/SearchSettingsCard/index.tsx","services/ticket.ts","components/Shared/AirlineLogo/index.tsx","components/Shared/Button/index.tsx","components/App/SearchArea/TicketsList/Ticket/index.tsx","helpers/display-currency.ts","components/App/SearchArea/TicketsList/index.tsx","components/App/SearchArea/LogoContainer/Logo/index.tsx","components/App/SearchArea/LogoContainer/index.tsx","components/App/SearchArea/index.tsx","index.tsx","components/App/index.tsx"],"names":["module","exports","hop-filter","only-action","text-container","spinner","spin","m-size","s-size","selling-area","info-area","logo","search-area","search-area-content","checkbox-container","checkmark","tickets-list","loader-container","app","search-settings","card","section-header","currency-radio-container","radio-container","action-button","logo-container","__webpack_require__","p","Boolean","window","location","hostname","match","TicketAction","HttpRequestMethod","FetchStatus","SortDirection","Currency","CurrencyAction","initialState","tickets","fetchStatus","Initial","filters","currency","RUB","pluralizeHops","hops","concat","ALL_HOP_FILTER_ITEM","field","value","HOP_FILTERS_ITEMS","label","filter","isLoading","Loading","isComplete","Complete","isError","Error","getSortedAndFilteredTickets","state","sortField","direction","arguments","length","undefined","Asc","_state$ticket","ticket","items","sort","a","b","Desc","reduce","acc","_ref","push","getTicketsFetchStatus","getTicketFilters","getTicketsCurrency","SpinnerSize","initialValues","currencies","_currencies","Object","defineProperty","USD","EUR","getCurrencyFetchStatus","getCurrencyRate","getCurrenciesMap","reducers","combineReducers","action","type","SetTickets","objectSpread","toConsumableArray","payload","SetTicketsFetchStatus","AddTicketsFilters","SetTicketsFilters","SetTicketsCurrency","RemoveTicketFilters","_action$payload$reduc","fields","values","_ref2","includes","SetCurrenciesMap","SetCurrencyFetchStatus","FlexWrapper","_ref$flexDirection","flexDirection","_ref$alignItems","alignItems","_ref$justifyContent","justifyContent","className","children","react_default","createElement","style","display","Card","styles","setTickets","setTicketsFetchStatus","setTicketsFilters","addTicketsFilters","removeTicketFilters","setTicketsCurrency","Checkbox","onClick","checked","onChange","HopFilter","onAdd","onRemove","onFilterClick","e","force","preventDefault","stopPropagation","isAllFiltersValue","Checkbox_Checkbox","FlexWrapper_FlexWrapper","HopFilters","connect","dispatch","bindActionCreators","removeTicketFilter","isIncludesFilter","searchField","searchValue","find","_ref3","onAddFilter","map","_ref4","onRemoveFilter","_ref5","HopFilter_HopFilter","key","SectionHeader","setCurrenciesMap","setCurrencyFetchStatus","CURRENCY_ITEMS","Radio","onRadioChange","target","itemValue","id","name","htmlFor","request","url","method","Get","body","Promise","resolve","reject","xmlRequest","XMLHttpRequest","open","send","onload","response","JSON","parse","onerror","CommonConfig","CURRENCIES_API_KEY","BASE_CURRENCY","mapTicket","ticketDto","origin","originName","origin_name","destination","destinationName","destination_name","departureDate","departure_date","departureTime","departure_time","arrivalDate","arrival_date","carrier","stops","price","mapCurrencies","currenciesMap","CurrencyService","classCallCheck","this","createClass","_get","asyncToGenerator","regenerator_default","mark","_callee","baseCurrency","rates","_args","wrap","_context","prev","next","sent","abrupt","stop","apply","Spinner","_ref$size","size","L","classes","CurrencyRadio","ticketsCurrency","currenciesFetchStatus","useEffect","get","then","Spinner_Spinner","S","Radio_Radio","SearchSettingsCard","Card_Card","SectionHeader_SectionHeader","TicketService","AirlineLogo","iata","_ref$height","height","_ref$width","width","src","Button","Ticket","rate","AirlineLogo_AirlineLogo","Button_Button","toLocaleString","maximumFractionDigits","minimumFractionDigits","displayCurrency","TicketsList","ticketsFetchStatus","M","index","Ticket_Ticket","buildTicketList","Logo","LogoSvg","alt","LogoContainer","Logo_Logo","SearchArea","LogoContainer_LogoContainer","SearchSettingsCard_SearchSettingsCard","store","compose","applyMiddleware","createStore","ReactDOM","render","es","SearchArea_SearchArea","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f5f72c22.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"hop-filter\":\"styles_hop-filter__2tO-_\",\"only-action\":\"styles_only-action__B_jtz\",\"text-container\":\"styles_text-container__3EcQb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"styles_spinner__3fRnz\",\"spin\":\"styles_spin__1nYRw\",\"m-size\":\"styles_m-size__2qMbW\",\"s-size\":\"styles_s-size__3tbuw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selling-area\":\"styles_selling-area__r4wBX\",\"info-area\":\"styles_info-area__Bg5G5\",\"logo\":\"styles_logo__1oTaK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-area\":\"styles_search-area__1a3Ju\",\"search-area-content\":\"styles_search-area-content__12f9S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox-container\":\"styles_checkbox-container__2Q69i\",\"checkmark\":\"styles_checkmark__1u2fk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tickets-list\":\"styles_tickets-list__2mXpJ\",\"loader-container\":\"styles_loader-container__3N7Lx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"styles_app__1VXZu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search-settings\":\"styles_search-settings__OSvKV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__1uyWI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section-header\":\"styles_section-header__1UM6_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currency-radio-container\":\"styles_currency-radio-container__2vgNT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radio-container\":\"styles_radio-container__hgfoF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"action-button\":\"styles_action-button__1RvkF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo-container\":\"styles_logo-container__GHb1W\"};","module.exports = __webpack_public_path__ + \"static/media/Logo.7b1c42c7.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/**\n * Типы экшенов тикета\n */\nexport enum TicketAction {\n\tSetTickets = 'TicketAction.SetTickets',\n\tSetTicketsFetchStatus = 'TicketAction.SetTicketsFetchStatus',\n\tAddTicketsFilters = 'TicketAction.AddTicketFilters',\n\tSetTicketsFilters = 'TicketAction.SetTicketsFilters',\n\tRemoveTicketFilters = 'TicketAction.RemoveTicketFilters',\n\tSetTicketsCurrency = 'TicketAction.SetTicketsCurrency'\n}","/**\n * Типы запросов http\n */\nexport enum HttpRequestMethod {\n\tGet = 'GET',\n\tPost = 'POST'\n}","/**\n * Список состояний асинхронных запросов\n */\nexport enum FetchStatus {\n\tInitial = 'initial',\n\tLoading = 'loading',\n\tComplete = 'complete',\n\tUpdating = 'updating',\n\tError = 'error'\n}","/**\n * Направления сортировки\n */\nexport enum SortDirection {\n\tAsc = 'asc',\n\tDesc = 'desc'\n}","export enum Currency {\n\tRUB = 'RUB',\n\tUSD = 'USD',\n\tEUR = 'EUR'\n}","import {Reducer} from 'redux';\n\nimport {TicketState} from '../../types/states';\nimport {RemovedTicketFiltersData} from '../../types/ticket';\nimport {ClientFilter} from '../../types/common';\nimport {Ticket} from '../../types/models';\n\nimport {TicketAction} from '../../enums/actions/ticket';\nimport {Currency, FetchStatus} from '../../enums/common';\n\nimport {TicketsActions} from '../../actions/ticket/types';\n\nconst initialState: TicketState = {\n\ttickets: [],\n\tfetchStatus: FetchStatus.Initial,\n\tfilters: [],\n\tcurrency: Currency.RUB\n};\n\n/**\n * Редьюсер тикетов\n */\nexport const ticketReducer: Reducer<TicketState, TicketsActions> = (\n\tstate: TicketState = initialState,\n\taction: TicketsActions\n) => {\n\tswitch (action.type) {\n\t\tcase TicketAction.SetTickets:\n\t\t\treturn {...state, tickets: [...action.payload]};\n\t\tcase TicketAction.SetTicketsFetchStatus:\n\t\t\treturn {...state, fetchStatus: action.payload};\n\t\tcase TicketAction.AddTicketsFilters:\n\t\t\treturn {...state, filters: [...state.filters, ...action.payload]};\n\t\tcase TicketAction.SetTicketsFilters:\n\t\t\treturn {...state, filters: [...action.payload]};\n\t\tcase TicketAction.SetTicketsCurrency:\n\t\t\treturn {...state, currency: action.payload};\n\t\tcase TicketAction.RemoveTicketFilters:\n\t\t\tconst {fields, values}: RemovedTicketFiltersData = action.payload.reduce(\n\t\t\t\t(acc: RemovedTicketFiltersData, {field, value}: ClientFilter<Ticket>) => {\n\t\t\t\t\tacc.fields.push(field);\n\t\t\t\t\tacc.values.push(value);\n\n\t\t\t\t\treturn acc;\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfields: [],\n\t\t\t\t\tvalues: []\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilters: [\n\t\t\t\t\t...state.filters.filter(\n\t\t\t\t\t\t({field, value}) => !fields.includes(field) || !values.includes(value)\n\t\t\t\t\t)\n\t\t\t\t]\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};","/**\n * Типы экшенов валют\n */\nexport enum CurrencyAction {\n\tSetCurrenciesMap = 'CurrencyAction.SetCurrenciesMap',\n\tSetCurrencyFetchStatus = 'CurrencyAction.SetCurrencyFetchStatus'\n}","/**\n * Склоняет слово \"пересадки\"\n */\nexport const pluralizeHops = (hops: number) => {\n\tif (hops === -1) return 'Все';\n\tif (hops === 0) return 'Без пересадок';\n\tif (hops === 1) return `${hops} пересадка`;\n\tif (hops >= 2 && hops <= 4) return `${hops} пересадки`;\n\tif (hops >= 5) return `${hops} пересадок`;\n\n\treturn ''\n};","import {FilterItem} from './types';\nimport {Ticket} from '../../../../../types/models';\nimport {ClientFilter} from '../../../../../types/common';\n\nimport {pluralizeHops} from './helpers';\n\n/**\n * Значение фильтра на отсутствие фильтров\n */\nexport const ALL_HOP_FILTER_ITEMS_VALUE = -1;\n\n/**\n * Дефолтный фильтр на включение всех фильтров\n */\nexport const ALL_HOP_FILTER_ITEM: ClientFilter<Ticket> = {\n\tfield: 'stops',\n\tvalue: ALL_HOP_FILTER_ITEMS_VALUE\n};\n\n/**\n * Список фильтров контрола с фильтрами по пересадкам\n */\nexport const HOP_FILTERS_ITEMS: FilterItem<Ticket>[] = [\n\t{\n\t\tlabel: pluralizeHops(ALL_HOP_FILTER_ITEMS_VALUE),\n\t\tfilter: ALL_HOP_FILTER_ITEM\n\t},\n\t{\n\t\tlabel: pluralizeHops(0),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 0\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeHops(1),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 1\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeHops(2),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 2\n\t\t}\n\t},\n\t{\n\t\tlabel: pluralizeHops(3),\n\t\tfilter: {\n\t\t\tfield: 'stops',\n\t\t\tvalue: 3\n\t\t}\n\t}\n];","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус загрузки\n */\nexport const isLoading = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Loading;","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус завершения\n */\nexport const isComplete = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Complete;","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус ошибки\n */\nexport const isError = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Error;","import {CommonState} from '../../types/states';\nimport {Ticket} from '../../types/models';\nimport {ClientFilter} from '../../types/common';\n\nimport {Currency, FetchStatus, SortDirection} from '../../enums/common';\nimport {ALL_HOP_FILTER_ITEMS_VALUE} from '../../components/App/SearchArea/SearchSettingsCard/HopFilters/config';\n\nimport {sort} from '../../helpers';\n\n/**\n * Возвращает сортированные и фильтрованные билеты\n */\nexport const getSortedAndFilteredTickets = (\n\tstate: CommonState,\n\tsortField: keyof Ticket,\n\tdirection: SortDirection = SortDirection.Asc\n): Ticket[] => {\n\tconst {tickets, filters} = state.ticket;\n\tconst filteredTickets = filters.length\n\t\t? tickets.reduce(\n\t\t\t(acc: Ticket[], ticket: Ticket) => {\n\t\t\t\tconst passedFilters = filters.filter(\n\t\t\t\t\t({field, value}) => ticket[field] === value || value === ALL_HOP_FILTER_ITEMS_VALUE\n\t\t\t\t);\n\n\t\t\t\tif (passedFilters.length === 0) {\n\t\t\t\t\treturn acc;\n\t\t\t\t}\n\n\t\t\t\tacc.push(ticket);\n\n\t\t\t\treturn acc;\n\t\t\t},\n\t\t\t[]\n\t\t)\n\t\t: tickets;\n\n\treturn sort<Ticket>(filteredTickets, sortField, direction);\n};\n\n/**\n * Возвращает состояние запроса за билетами\n */\nexport const getTicketsFetchStatus = (state: CommonState): FetchStatus =>\n\tstate.ticket.fetchStatus;\n\n/**\n * Возвращает состояние фильтров билетов\n */\nexport const getTicketFilters = (state: CommonState): ClientFilter<Ticket>[] =>\n\tstate.ticket.filters;\n\n/**\n * Возвращает текущую валюту для билетов\n */\nexport const getTicketsCurrency = (state: CommonState): Currency =>\n\tstate.ticket.currency;\n","import {SortDirection} from '../enums/common';\n\n/**\n * Сортирует сущности по полю\n */\nexport const sort = <T>(\n\titems: T[],\n\tsortField: keyof T,\n\tdirection: SortDirection = SortDirection.Asc\n) => {\n\treturn items.sort((a: T, b: T) => {\n\t\tif (direction === SortDirection.Asc) {\n\t\t\tif (a[sortField] > b[sortField]) return 1;\n\t\t\tif (a[sortField] < b[sortField]) return -1;\n\t\t\treturn 0;\n\t\t}\n\t\tif (direction === SortDirection.Desc) {\n\t\t\tif (a[sortField] < b[sortField]) return 1;\n\t\t\tif (a[sortField] > b[sortField]) return -1;\n\t\t\treturn 0;\n\t\t}\n\t\treturn 0;\n\t});\n};","import {Reducer} from 'redux';\n\nimport {CurrencyState} from '../../types/states';\nimport {CurrencyActions} from '../../actions/currency/types';\n\nimport {Currency, FetchStatus} from '../../enums/common';\nimport {CurrencyAction} from '../../enums/actions/currency';\n\nconst initialValues: CurrencyState = {\n\tcurrencies: {\n\t\t[Currency.RUB]: 1,\n\t\t[Currency.USD]: 1,\n\t\t[Currency.EUR]: 1\n\t},\n\tfetchStatus: FetchStatus.Initial\n};\n\n/**\n * Редьюсер валют\n */\nexport const currencyReducer: Reducer<CurrencyState, CurrencyActions> = (\n\tstate: CurrencyState = initialValues,\n\taction: CurrencyActions) => {\n\t\tswitch (action.type) {\n\t\t\tcase CurrencyAction.SetCurrenciesMap:\n\t\t\t\treturn {...state, currencies: action.payload};\n\t\t\tcase CurrencyAction.SetCurrencyFetchStatus:\n\t\t\t\treturn {...state, fetchStatus: action.payload};\n\t\t\tdefault:\n\t\t\t\treturn state;\n\t\t}\n};","/**\n * Размеры спиннера\n */\nexport enum SpinnerSize {\n\tL = 'l-size',\n\tM = 'm-size',\n\tS = 's-size'\n}","import {CommonState} from '../../types/states';\nimport {CurrenciesMap} from '../../types/models';\nimport {Currency, FetchStatus} from '../../enums/common';\n\n/**\n * Возвращает словарь валют\n */\nexport const getCurrenciesMap = (state: CommonState): CurrenciesMap =>\n\tstate.currency.currencies;\n\n/**\n * Возвращает состояние запроса за словарем валют\n */\nexport const getCurrencyFetchStatus = (state: CommonState): FetchStatus =>\n\tstate.currency.fetchStatus;\n/**\n * Возвращает коэффициент конвертации базовой валюты в искомую\n */\nexport const getCurrencyRate = (state: CommonState, currency: Currency): number => {\n\tconst currenciesMap = getCurrenciesMap(state);\n\n\treturn currenciesMap[currency];\n};","import {combineReducers} from 'redux';\n\nimport {CommonState} from '../types/states';\n\nimport {ticketReducer} from './ticket';\nimport {currencyReducer} from './currency';\n\n/**\n * Собирает все редьюсеры проекта\n */\nexport const reducers = combineReducers<CommonState>({\n\tticket: ticketReducer,\n\tcurrency: currencyReducer\n});","import React from 'react';\n\nimport {FlexWrapperProps} from './types';\n\n/**\n * Компонента-враппер для позиционирования чайлдов через Flex API\n */\nexport const FlexWrapper: React.FC<FlexWrapperProps> = (\n\t{\n\t\tflexDirection = 'row',\n\t\talignItems = 'center',\n\t\tjustifyContent = 'center',\n\t\tclassName,\n\t\tchildren\n\t}\n) => (\n\t<div\n\t\tstyle={{\n\t\t\tdisplay: 'flex',\n\t\t\tflexDirection,\n\t\t\talignItems,\n\t\t\tjustifyContent,\n\t\t}}\n\t\tclassName={className}\n\t>{children}</div>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {CardProps} from './types';\n\n/**\n * Белая карта-подложка\n */\nexport const Card: React.FC<CardProps> = ({children}) => (\n\t<div className={styles.card}>{children}</div>\n);","import {\n\tAddTicketsFilters,\n\tRemoveTicketFilters,\n\tSetTickets,\n\tSetTicketsCurrency,\n\tSetTicketsFetchStatus,\n\tSetTicketsFilters\n} from './types';\nimport {Ticket} from '../../types/models';\nimport {ClientFilter} from '../../types/common';\n\nimport {TicketAction} from '../../enums/actions/ticket';\nimport {Currency, FetchStatus} from '../../enums/common';\n\n/**\n * Устанавливает тикеты в стейт\n */\nexport const setTickets = (tickets: Ticket[]): SetTickets => ({\n\ttype: TicketAction.SetTickets,\n\tpayload: tickets\n});\n\n/**\n * Устанавливает состояние запроса за тикетами\n */\nexport const setTicketsFetchStatus = (fetchStatus: FetchStatus): SetTicketsFetchStatus => ({\n\ttype: TicketAction.SetTicketsFetchStatus,\n\tpayload: fetchStatus\n});\n\n/**\n * Устанавливает фильтры по тикетам\n */\nexport const setTicketsFilters = (filters: ClientFilter<Ticket>[]): SetTicketsFilters => ({\n\ttype: TicketAction.SetTicketsFilters,\n\tpayload: filters\n});\n\n/**\n * Добавляет фильтры по тикетам\n */\nexport const addTicketsFilters = (filters: ClientFilter<Ticket>[]): AddTicketsFilters => ({\n\ttype: TicketAction.AddTicketsFilters,\n\tpayload: filters\n});\n\n/**\n * Удаляет фильтр\n */\nexport const removeTicketFilters = (filters: ClientFilter<Ticket>[]): RemoveTicketFilters => ({\n\ttype: TicketAction.RemoveTicketFilters,\n\tpayload: filters\n});\n\n/**\n * Устанавливает текущую валюту тикетов\n */\nexport const setTicketsCurrency = (currency: Currency): SetTicketsCurrency => ({\n\ttype: TicketAction.SetTicketsCurrency,\n\tpayload: currency\n});\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {CheckboxProps} from './types';\n\n/**\n * Кастомный чекбокс\n */\nexport const Checkbox: React.FC<CheckboxProps> = ({onClick, checked}) => (\n\t<label className={styles['checkbox-container']}>\n\t\t<input type=\"checkbox\" checked={checked} onChange={onClick}/>\n\t\t<span className={styles.checkmark}></span>\n\t</label>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {HopFilterProps} from './types';\n\nimport {ALL_HOP_FILTER_ITEMS_VALUE} from '../config';\n\nimport {Checkbox} from '../../../../../Shared/Checkbox';\nimport {FlexWrapper} from '../../../../../Shared/FlexWrapper';\n\n/**\n * Фильтр на пересадку\n */\nexport const HopFilter: React.FC<HopFilterProps> = ({filter, checked, label, onAdd, onRemove}) => {\n\t/**\n\t * Обработчик клика по лейблу и чекбоксу\n\t */\n\tconst onFilterClick = (\n\t\te: React.MouseEvent<HTMLDivElement> | React.ChangeEvent<HTMLElement>,\n\t\tforce: boolean = false\n\t) => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\n\t\tif (force) {\n\t\t\tonAdd(filter, force);\n\t\t\treturn;\n\t\t}\n\t\tchecked ? onRemove(filter) : onAdd(filter, force);\n\t};\n\n\tconst isAllFiltersValue = filter.value === ALL_HOP_FILTER_ITEMS_VALUE;\n\n\treturn (\n\t\t<div className={styles['hop-filter']} onClick={(e) => onFilterClick(e)}>\n\t\t\t<Checkbox checked={checked} onClick={(e) => onFilterClick(e)}/>\n\t\t\t<FlexWrapper justifyContent=\"space-between\" className={styles['text-container']}>\n\t\t\t\t<span>{label}</span>\n\t\t\t\t{!isAllFiltersValue && <div\n\t\t\t\t\tclassName={styles['only-action']}\n\t\t\t\t\tonClick={(e) => onFilterClick(e, true)}\n\t\t\t\t>\n\t\t\t\t\tТолько\n\t\t\t\t</div>}\n\t\t\t</FlexWrapper>\n\t\t</div>\n\t);\n};","import React from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport {HopFiltersDispatchProps, HopFiltersOwnProps, HopFiltersProps, HopFiltersStateProps} from './types';\nimport {CommonState} from '../../../../../types/states';\nimport {ClientFilter} from '../../../../../types/common';\nimport {Ticket} from '../../../../../types/models';\n\nimport {ALL_HOP_FILTER_ITEM, ALL_HOP_FILTER_ITEMS_VALUE, HOP_FILTERS_ITEMS} from './config';\n\nimport {addTicketsFilters, removeTicketFilters, setTicketsFilters} from '../../../../../actions/ticket';\nimport {getTicketFilters} from '../../../../../reducers/ticket';\n\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\nimport {HopFilter} from './HopFilter';\n\nconst mapStateToProps: MapStateToProps<\n\tHopFiltersStateProps,\n\tHopFiltersOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\tfilters: getTicketFilters(state)\n});\n\nconst mapDispatchToProps: MapDispatchToProps<\n\tHopFiltersDispatchProps,\n\tHopFiltersOwnProps\n> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTicketsFilters,\n\t\t\taddTicketsFilters,\n\t\t\tremoveTicketFilter: removeTicketFilters\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Фильтры пересадок с карточки настроек поиска\n */\nexport const HopFilters = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({addTicketsFilters, setTicketsFilters, removeTicketFilter, filters}) => {\n\t/**\n\t * Проверяет добавлен ли текущий фильтр\n\t */\n\tconst isIncludesFilter = (\n\t\t{field: searchField, value: searchValue}: ClientFilter<Ticket>\n\t): boolean => {\n\t\tconst foundFilter = filters.find(\n\t\t\t({field, value}: ClientFilter<Ticket>) => field === searchField && value === searchValue\n\t\t);\n\n\t\treturn !!foundFilter;\n\t};\n\n\t/**\n\t * Обработчик добавления фильтра\n\t */\n\tconst onAddFilter = (filter: ClientFilter<Ticket>, force: boolean) => {\n\t\tif (filter.value === ALL_HOP_FILTER_ITEMS_VALUE) {\n\t\t\tconst filters = [...HOP_FILTERS_ITEMS.map(({filter}) => filter), filter];\n\t\t\tsetTicketsFilters(filters);\n\t\t\treturn;\n\t\t}\n\n\t\tforce ? setTicketsFilters([filter]): addTicketsFilters([filter])\n\t};\n\n\t/**\n\t * Обработчик удаления фильтра\n\t */\n\tconst onRemoveFilter = (filter: ClientFilter<Ticket>) => {\n\t\tif (filter.value === ALL_HOP_FILTER_ITEMS_VALUE) {\n\t\t\tsetTicketsFilters([]);\n\t\t\treturn;\n\t\t}\n\t\tremoveTicketFilter([filter, ALL_HOP_FILTER_ITEM]);\n\t};\n\n\t/**\n\t * Строит список фильтров по пересадкам\n\t */\n\tconst buildCheckboxFiltersList = (): React.ReactNode[] => {\n\t\treturn HOP_FILTERS_ITEMS.map(({label, filter}) => (\n\t\t\t<HopFilter\n\t\t\t\tkey={filter.value}\n\t\t\t\tlabel={label}\n\t\t\t\tfilter={filter}\n\t\t\t\tchecked={isIncludesFilter(filter)}\n\t\t\t\tonAdd={onAddFilter}\n\t\t\t\tonRemove={onRemoveFilter}\n\t\t\t/>\n\t\t))\n\t};\n\t\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\">\n\t\t\t{buildCheckboxFiltersList()}\n\t\t</FlexWrapper>\n\t);\n}) as React.FC<HopFiltersProps>);\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\n/**\n * Заголовок секции на карточке поиска\n */\nexport const SectionHeader: React.FC = ({children}) => (\n\t<span className={styles['section-header']}>{children}</span>\n);","import {SetCurrenciesMap, SetCurrencyFetchStatus} from './types';\nimport {CurrenciesMap} from '../../types/models';\n\nimport {CurrencyAction} from '../../enums/actions/currency';\nimport {FetchStatus} from '../../enums/common';\n\n/**\n * Устанавливает словарь валют в хранилище приложения\n */\nexport const setCurrenciesMap = (currencies: CurrenciesMap): SetCurrenciesMap => ({\n\ttype: CurrencyAction.SetCurrenciesMap,\n\tpayload: currencies\n});\n\n/**\n * Устанавливает состояние запроса за словарем валют\n */\nexport const setCurrencyFetchStatus = (fetchStatus: FetchStatus): SetCurrencyFetchStatus => ({\n\ttype: CurrencyAction.SetCurrencyFetchStatus,\n\tpayload: fetchStatus\n});","import {RadioItem} from '../../../../Shared/Radio/types';\nimport {Currency} from '../../../../../enums/common';\n\n/**\n * Список элементов радиобаттона валют\n */\nexport const CURRENCY_ITEMS: RadioItem[] = [\n\t{\n\t\tlabel: Currency.RUB,\n\t\tvalue: Currency.RUB\n\t},\n\t{\n\t\tlabel: Currency.USD,\n\t\tvalue: Currency.USD\n\t},\n\t{\n\t\tlabel: Currency.EUR,\n\t\tvalue: Currency.EUR\n\t}\n];","import React from 'react';\n\nimport {RadioItem, RadioProps} from './types';\n\nimport styles from './styles.module.css';\n\n/**\n * Компонета кастомного радиобаттона\n */\nexport const Radio: React.FC<RadioProps> = ({value, onChange, items}) => {\n\t/**\n\t * Строит список кнопок радиобаттона\n\t */\n\tconst buildRadioButtonsList = () => items.map(({label, value: itemValue}: RadioItem) => (\n\t\t<span key={itemValue}>\n\t\t\t<input type=\"radio\"\n\t\t\t\tid={itemValue}\n\t\t\t\tvalue={itemValue}\n\t\t\t\tonChange={onRadioChange}\n\t\t\t\tchecked={value === itemValue}\n\t\t\t\tname=\"currency\" />\n\t\t\t<label htmlFor={itemValue}>{label}</label>\n\t\t</span>\n\t));\n\n\t/**\n\t * Обработчик изменения радиобаттона\n\t */\n\tconst onRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\tonChange(e.target.value);\n\t};\n\n\treturn (\n\t\t<div className={styles['radio-container']}>\n\t\t\t<fieldset>\n\t\t\t\t{buildRadioButtonsList()}\n\t\t\t</fieldset>\n\t\t</div>\n\t);\n};","import {HttpRequestMethod} from '../enums/common';\n\n/**\n * Выполняет запрос на сервер\n */\nexport const request = <R ={}>(\n\turl: string,\n\tmethod: HttpRequestMethod = HttpRequestMethod.Get,\n\tbody: Document | BodyInit | null = null\n): Promise<R> => {\n\treturn new Promise<R>((resolve, reject) => {\n\t\tconst xmlRequest = new XMLHttpRequest();\n\n\t\txmlRequest.open(method, url);\n\n\t\txmlRequest.send(body);\n\n\t\txmlRequest.onload = () => resolve(xmlRequest.response ? JSON.parse(xmlRequest.response) : null);\n\n\t\txmlRequest.onerror = () => reject(xmlRequest.response ? JSON.parse(xmlRequest.response) : null);\n\t});\n};","import {Currency} from './enums/common';\n\n/**\n * Основной конфиг приложения\n */\nexport const CommonConfig = {\n\t/**\n\t * Ключ API данных по конвертации валют\n\t */\n\tCURRENCIES_API_KEY: 'b7da7a0fcc0843fcdc3190be64072c7f',\n\t/**\n\t * Базовая валюта стоимостей\n\t */\n\tBASE_CURRENCY: Currency.RUB\n};","import {TicketDto} from '../types/dto';\nimport {Ticket} from '../types/models';\n\n/**\n * Мапит транспортную сущность билета на клиентскую\n */\nexport const mapTicket = (ticketDto: TicketDto): Ticket => {\n\treturn {\n\t\torigin: ticketDto.origin,\n\t\toriginName: ticketDto.origin_name,\n\t\tdestination: ticketDto.destination,\n\t\tdestinationName: ticketDto.destination_name,\n\t\tdepartureDate: ticketDto.departure_date,\n\t\tdepartureTime: ticketDto.departure_time,\n\t\tarrivalDate: ticketDto.arrival_date,\n\t\tcarrier: ticketDto.carrier,\n\t\tstops: ticketDto.stops,\n\t\tprice: ticketDto.price\n\t};\n};","import {CurrenciesMapDto} from '../types/dto';\nimport {CurrenciesMap} from '../types/models';\n\nimport {Currency} from '../enums/common';\n\n/**\n * Маппит серверный словарь валют на клиентский\n */\nexport const mapCurrencies = (currenciesMap: CurrenciesMapDto): CurrenciesMap => {\n\treturn {\n\t\t[Currency.USD]: currenciesMap[Currency.USD] || 1,\n\t\t[Currency.EUR]: currenciesMap[Currency.EUR] || 1,\n\t\t[Currency.RUB]: currenciesMap[Currency.RUB] || 1,\n\t};\n}","import {request} from './request';\n\nimport {CurrenciesMap} from '../types/models';\n\nimport {CommonConfig} from '../config';\nimport {Currency} from '../enums/common';\n\nimport {mapCurrencies} from '../mappers';\n\n/**\n * Сервис валют\n */\nexport class CurrencyService {\n\t/**\n\t * Возвращает мапу валют\n\t */\n\tpublic static async get(baseCurrency: Currency = CommonConfig.BASE_CURRENCY): Promise<CurrenciesMap> {\n\t\tconst {rates} = await request<{rates: CurrenciesMap}>(`https://data.fixer.io/api/latest\n\t\t\t?access_key=${CommonConfig.CURRENCIES_API_KEY}\n\t\t\t&base=${baseCurrency}\n\t\t\t&symbols=${Currency.EUR},${Currency.USD}`);\n\n\t\treturn mapCurrencies(rates);\n\t}\n}","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {SpinnerProps} from './types';\n\nimport {SpinnerSize} from './config';\n\n/**\n * Простой спиннер\n */\nexport const Spinner: React.FC<SpinnerProps> = ({size = SpinnerSize.L}) => {\n\tconst classes = size !== SpinnerSize.L\n\t\t? `${styles.spinner} ${styles[size]}`\n\t\t: styles.spinner;\n\n\treturn (\n\t\t<div className={classes}></div>\n\t);\n}","import React, {useEffect} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport styles from './styles.module.css';\n\nimport {CurrencyRadioDispatchProps, CurrencyRadioOwnProps, CurrencyRadioProps, CurrencyRadioStateProps} from './types';\nimport {CommonState} from '../../../../../types/states';\n\nimport {setTicketsCurrency} from '../../../../../actions/ticket';\nimport {setCurrenciesMap, setCurrencyFetchStatus} from '../../../../../actions/currency';\n\nimport {getTicketsCurrency} from '../../../../../reducers/ticket';\nimport {getCurrencyFetchStatus} from '../../../../../reducers/currency';\n\nimport {Currency, FetchStatus} from '../../../../../enums/common';\nimport {CURRENCY_ITEMS} from './config';\n\nimport {isComplete, isError, isLoading, isInitial} from '../../../../../helpers';\n\nimport {Radio} from '../../../../Shared/Radio';\nimport {CurrencyService} from '../../../../../services/currency';\nimport {Spinner} from '../../../../Shared/Spinner';\nimport {SpinnerSize} from '../../../../Shared/Spinner/config';\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\n\nconst mapStateToProps: MapStateToProps<\n\tCurrencyRadioStateProps,\n\tCurrencyRadioOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\tticketsCurrency: getTicketsCurrency(state),\n\tcurrenciesFetchStatus: getCurrencyFetchStatus(state)\n});\n\nconst mapDispatchToProps: MapDispatchToProps<\n\tCurrencyRadioDispatchProps,\n\tCurrencyRadioOwnProps\n> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTicketsCurrency,\n\t\t\tsetCurrenciesMap,\n\t\t\tsetCurrencyFetchStatus\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Радио баттон выбора валюты\n */\nexport const CurrencyRadio = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({\n\tsetTicketsCurrency,\n\tsetCurrenciesMap,\n\tsetCurrencyFetchStatus,\n\tcurrenciesFetchStatus,\n\tticketsCurrency\n}) => {\n\tuseEffect(() => {\n\t\t// Не делать запрос за данными, в случае, когда где-либо данные словаря уже запрошены\n\t\tif (isInitial(currenciesFetchStatus)) {\n\t\t\tsetCurrencyFetchStatus(FetchStatus.Loading);\n\t\t\tCurrencyService.get().then(\n\t\t\t\t(currencies) => {\n\t\t\t\t\tsetCurrenciesMap(currencies);\n\t\t\t\t\tsetCurrencyFetchStatus(FetchStatus.Complete);\n\t\t\t\t},\n\t\t\t\t() => setCurrencyFetchStatus(FetchStatus.Error)\n\t\t\t);\n\t\t}\n\t}, [setCurrenciesMap, setCurrencyFetchStatus, currenciesFetchStatus]);\n\n\t/**\n\t * Обработчик изменения радиобаттона валют\n\t */\n\tconst onChangeRadio = (currency: string) => setTicketsCurrency(currency as Currency);\n\n\treturn (\n\t\t<FlexWrapper className={styles['currency-radio-container']}>\n\t\t\t{isLoading(currenciesFetchStatus) && <Spinner size={SpinnerSize.S}/>}\n\t\t\t{isError(currenciesFetchStatus) && <div>Что-то пошло не так :/</div>}\n\t\t\t{isComplete(currenciesFetchStatus) && <Radio\n\t\t\t\titems={CURRENCY_ITEMS}\n\t\t\t\tonChange={onChangeRadio}\n\t\t\t\tvalue={ticketsCurrency}\n\t\t\t/>}\n\t\t</FlexWrapper>\n\t);\n}) as React.FC<CurrencyRadioProps>);","import {FetchStatus} from '../enums/common';\n\n/**\n * Проверяет статус запроса за данными на статус инициализации\n */\nexport const isInitial = (fetchStatus: FetchStatus): boolean =>\n\tfetchStatus === FetchStatus.Initial;","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Card} from '../../../Shared/Card';\nimport {HopFilters} from './HopFilters';\nimport {SectionHeader} from './SectionHeader';\nimport {CurrencyRadio} from './CurrencyRadio';\n\n/**\n * Карточка настроек поиска билетов\n */\nexport const SearchSettingsCard: React.FC = () => (\n\t<Card>\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles['search-settings']}>\n\t\t\t<SectionHeader>Валюта</SectionHeader>\n\t\t\t<CurrencyRadio />\n\t\t\t<SectionHeader>Количество пересадок</SectionHeader>\n\t\t\t<HopFilters />\n\t\t</FlexWrapper>\n\t</Card>\n);","import {request} from './request';\n\nimport {TicketDto} from '../types/dto';\n\nimport {mapTicket} from '../mappers';\n\n/**\n * Сервис билетов\n */\nexport class TicketService {\n\t/**\n\t * Возвращает список билетов\n\t */\n\tpublic static async get() {\n\t\tconst {tickets} = await request<{tickets: TicketDto[]}>('/tickets.json');\n\n\t\treturn tickets.map(mapTicket);\n\t}\n}","import React from 'react';\n\nimport {AirlineLogoProps} from './types';\n\n/**\n * Лого авиакомпании\n */\nexport const AirlineLogo: React.FC<AirlineLogoProps> = ({iata, height = 50, width = 150, className}) => (\n\t<img src={`http://pics.avs.io/${width}/${height}/${iata}.png`} className={className}/>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {ButtonProps} from './types';\n\n/**\n * Кастомная кнопка\n */\nexport const Button: React.FC<ButtonProps> = ({children}) => (\n\t<button className={styles['action-button']}>{children}</button>\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {TicketProps} from './types';\n\nimport {Card} from '../../../../Shared/Card';\nimport {AirlineLogo} from '../../../../Shared/AirlineLogo';\nimport {FlexWrapper} from '../../../../Shared/FlexWrapper';\nimport {Button} from '../../../../Shared/Button';\nimport {displayCurrency} from '../../../../../helpers';\n\n/**\n * Карточка билета\n */\nexport const Ticket: React.FC<TicketProps> = ({ticket, rate, currency}) => {\n\tconst {\n\t\toriginName,\n\t\tprice,\n\t\tstops,\n\t\tcarrier\n\t} = ticket;\n\n\treturn (\n\t\t<Card>\n\t\t\t<FlexWrapper>\n\t\t\t\t<FlexWrapper flexDirection=\"column\" className={styles['selling-area']}>\n\t\t\t\t\t<AirlineLogo iata={carrier} className={styles.logo}/>\n\t\t\t\t\t<Button onClick={() => {}}>{`Купить за ${displayCurrency(price * rate, currency)}`}</Button>\n\t\t\t\t</FlexWrapper>\n\t\t\t\t<FlexWrapper flexDirection=\"column\" className={styles['info-area']}>\n\t\t\t\t\t<div>{ticket.originName}</div>\n\t\t\t\t\t<div>{ticket.price * rate}</div>\n\t\t\t\t\t<div>{ticket.stops}</div>\n\t\t\t\t</FlexWrapper>\n\t\t\t</FlexWrapper>\n\t\t</Card>\n\t);\n};","import {Currency} from '../enums/common';\n\n/**\n * Отображает знак валюты в русской локали\n */\nexport const displayCurrency = (value: number, currency: Currency) =>\n\tvalue.toLocaleString(\"ru-RU\", {\n\t\tcurrency,\n\t\tstyle: \"currency\",\n\t\tmaximumFractionDigits: 0,\n\t\tminimumFractionDigits: 0\n\t})","import React, {useEffect} from 'react';\nimport {bindActionCreators} from 'redux';\nimport {connect, MapDispatchToProps, MapStateToProps} from 'react-redux';\n\nimport styles from './styles.module.css';\n\nimport {TicketListDispatchProps, TicketListOwnProps, TicketListProps, TicketListStateProps} from './types';\nimport {Ticket} from '../../../../types/models';\nimport {CommonState} from '../../../../types/states';\n\nimport {TicketService} from '../../../../services';\n\nimport {setTickets, setTicketsFetchStatus} from '../../../../actions/ticket';\n\nimport {getSortedAndFilteredTickets, getTicketsCurrency, getTicketsFetchStatus} from '../../../../reducers/ticket';\nimport {getCurrencyRate} from '../../../../reducers/currency';\n\nimport {FetchStatus} from '../../../../enums/common';\n\nimport {isComplete, isError, isLoading} from '../../../../helpers';\n\nimport {Ticket as TicketComponent} from './Ticket';\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Spinner} from '../../../Shared/Spinner';\nimport {SpinnerSize} from '../../../Shared/Spinner/config';\n\nconst mapStateToProps: MapStateToProps<\n\tTicketListStateProps,\n\tTicketListOwnProps,\n\tCommonState\n> = (state: CommonState) => ({\n\ttickets: getSortedAndFilteredTickets(state, 'price'),\n\tticketsFetchStatus: getTicketsFetchStatus(state),\n\tticketsCurrency: getTicketsCurrency(state),\n\trate: getCurrencyRate(state, getTicketsCurrency(state))\n});\n\nconst mapDispatchToProps: MapDispatchToProps<TicketListDispatchProps, TicketListOwnProps> = (dispatch) =>\n\tbindActionCreators(\n\t\t{\n\t\t\tsetTickets,\n\t\t\tsetTicketsFetchStatus\n\t\t},\n\t\tdispatch\n\t);\n\n/**\n * Список билетов\n */\nexport const TicketsList = connect(\n\tmapStateToProps,\n\tmapDispatchToProps\n)((({\n\tsetTickets,\n\tsetTicketsFetchStatus,\n\ttickets,\n\tticketsFetchStatus,\n\tticketsCurrency,\n\trate\n}) => {\n\tuseEffect(() => {\n\t\tsetTicketsFetchStatus(FetchStatus.Loading);\n\t\tTicketService.get().then((tickets) => {\n\t\t\tsetTickets(tickets);\n\t\t\tsetTicketsFetchStatus(FetchStatus.Complete);\n\t\t},() => setTicketsFetchStatus(FetchStatus.Error));\n\t}, [setTickets, setTicketsFetchStatus]);\n\n\t/**\n\t * Строит список билетов\n\t */\n\tconst buildTicketList = (tickets: Ticket[]) =>\n\t\ttickets.map((ticket: Ticket, index: number) => (\n\t\t\t<TicketComponent\n\t\t\t\tkey={index}\n\t\t\t\tticket={ticket}\n\t\t\t\trate={rate}\n\t\t\t\tcurrency={ticketsCurrency}\n\t\t\t/>\n\t\t));\n\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles['tickets-list']}>\n\t\t\t{isLoading(ticketsFetchStatus) && (\n\t\t\t\t<FlexWrapper alignItems=\"center\" className={styles['loader-container']}>\n\t\t\t\t\t<Spinner size={SpinnerSize.M}/>\n\t\t\t\t</FlexWrapper>\n\t\t\t)}\n\t\t\t{isError(ticketsFetchStatus) && <span>Извините, что-то пошло не так :/</span>}\n\t\t\t{isComplete(ticketsFetchStatus) && buildTicketList(tickets)}\n\t\t</FlexWrapper>\n\t)\n}) as React.FC<TicketListProps>);","import React from 'react';\nimport LogoSvg from './Assets/Logo.svg';\n\n/**\n * Компонента, отображающая svg лого\n */\nexport const Logo: React.FC = () => (\n\t<img src={LogoSvg} alt=\"logo\" />\n);","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../../Shared/FlexWrapper';\nimport {Logo} from './Logo';\n\n/**\n * Контейнер для лого сайта\n */\nexport const LogoContainer: React.FC = () => ((\n\t<FlexWrapper className={styles['logo-container']}>\n\t\t<Logo />\n\t</FlexWrapper>\n));","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../../Shared/FlexWrapper';\nimport {SearchSettingsCard} from './SearchSettingsCard';\nimport {TicketsList} from './TicketsList';\nimport {LogoContainer} from './LogoContainer';\n\n/**\n * Компонента, содержащая зону поиска\n */\nexport const SearchArea: React.FC = () => (\n\t<FlexWrapper\n\t\tflexDirection=\"column\"\n\t\tjustifyContent=\"start\"\n\t\talignItems=\"stretch\"\n\t\tclassName={styles['search-area']}\n\t>\n\t\t<LogoContainer />\n\t\t<FlexWrapper className={styles['search-area-content']} alignItems=\"start\">\n\t\t\t<SearchSettingsCard />\n\t\t\t<TicketsList />\n\t\t</FlexWrapper>\n\t</FlexWrapper>\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport {applyMiddleware, compose, createStore} from 'redux';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport {reducers} from './reducers';\n\nimport {App} from './components/App';\n\nconst middlewares = [];\nif (process.env.NODE_ENV === 'development') {\n\t// Избегает добавление логгера в продакшн\n\tconst { logger } = require('redux-logger');\n\n\tmiddlewares.push(logger);\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(reducers);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\n\nimport styles from './styles.module.css';\n\nimport {FlexWrapper} from '../Shared/FlexWrapper';\nimport {SearchArea} from './SearchArea';\n\n/**\n * Стартовая компонента приложения\n */\nexport const App: React.FC = () => {\n\treturn (\n\t\t<FlexWrapper flexDirection=\"column\" alignItems=\"stretch\" className={styles.app}>\n\t\t\t<SearchArea />\n\t\t</FlexWrapper>\n\t);\n};"],"sourceRoot":""}